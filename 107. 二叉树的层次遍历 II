   /**
     * 功能描述: 107. 二叉树的层次遍历 II
     * @Author: zxc
     * @Date: 2020/10/12 8:57
     * @Descreption: 简单利用层序遍历，然后最后反转结果即可
     */
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        //要返回的结果
        List<List<Integer>> re=new ArrayList<>();
        if (root==null) return re;
        //queue来存储依次的结点
        Queue<TreeNode> queue=new LinkedList<>();
        //将头结点入队
        queue.offer(root);
        //直到队列非空
        while (!queue.isEmpty()){
            int size=queue.size();
            //暂存每层的结点数据
            List<Integer> tmp=new ArrayList<>();
            //将该层的结点全部入队
            for (int i = 0; i < size; i++) {
                TreeNode node=queue.poll();
                tmp.add(node.val);
                //将下层的结点入队
                if (node.left!=null){
                    queue.offer(node.left);
                }
                if (node.right!=null){
                    queue.offer(node.right);
                }
            }
            //将该层的结果入re
            re.add(tmp);
        }
        //反转
        Collections.reverse(re);
        return re;
    }
