/**
     * 功能描述: 226. 翻转二叉树
     * @Author: zxc
     * @Date: 2020/10/12 8:57
     * @Descreption: 利用层次遍历，依次结点进行翻转
     */
    public TreeNode invertTree(TreeNode root) {

        if (root==null) return root;
        //queue来存储依次的结点
        Queue<TreeNode> queue=new LinkedList<>();
        //将头结点入队
        queue.offer(root);
        //直到队列非空
        while (!queue.isEmpty()){
            int size=queue.size();
            //将该层的结点全部入队
            for (int i = 0; i < size; i++) {
                TreeNode node=queue.poll();
                //进行翻转
                TreeNode tmp=node.left;
                node.left=node.right;
                node.right=tmp;
                //将下层的结点入队
                if (node.left!=null){
                    queue.offer(node.left);
                }
                if (node.right!=null){
                    queue.offer(node.right);
                }
            }
        }
        return root;
    }
