/**
     * 功能描述: 543. 二叉树的直径
     * @Author: zxc
     * @Date: 2020/11/4 8:09
     * @Descreption: 对每个结点递归，然后再利用递归再次计算出每个结点的路径长，相当于进行2次的递归，复杂度未n^2
     */
    int max=0;
    public int diameterOfBinaryTree(TreeNode root) {
        if (root!=null){
            int tmp;
            diameterOfBinaryTree(root.left);
            diameterOfBinaryTree(root.right);
             if ((tmp=(height(root.left)+height(root.right)))>max) max=tmp;
        }
        return max;
    }

    public int height(TreeNode root){
        if (root!=null){
            return Math.max(height(root.left),height(root.right))+1;
        }
        return 0;
    }
    
    
    
    
    //对每个结点遍历的时候就直接计算出该结点的值，并进行判断，从上到下，再从下到上
    
    int max;
    public int diameterOfBinaryTree(TreeNode root) {
        height(root);
        return max;
    }

    public int height(TreeNode root){
        if (root!=null){
            int l=height(root.left);
            int r=height(root.right);
            max=Math.max(max,l+r);
            return Math.max(l,r)+1;
        }
        return 0;
    }
