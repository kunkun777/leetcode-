/**
     * 功能描述: 04.02. 最小高度树
     * @Author: zxc
     * @Date: 2020/10/13 9:45
     * @Descreption: BFS,利用递归调用，以每次的调用的时候的数组不同
     */
    public TreeNode sortedArrayToBST(int[] nums) {
        //以数组的上下界为标准
        return helper(nums, 0, nums.length - 1);
    }

        public TreeNode helper(int[] nums, int low, int high) {
            if (low > high) {   // low > high表示子数组为空
                return null;
            }
            // 以mid作为根节点
            int mid = (high - low) / 2 + low;
            TreeNode root = new TreeNode(nums[mid]);
            // 左子数组[low, mid -1]构建左子树
            root.left = helper(nums, low, mid - 1);
            // 右子数组[mid + 1, high]构建右子树
            root.right = helper(nums,mid + 1, high);
            return root;
        }
